{"version":3,"file":"makeup-focusables/index.min.js","mappings":";;;;;;;AAAa;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;ACtBa;;AAEb,+CAA+C,mBAAO,CAAC,GAAmB;AAC1E,qCAAqC,iCAAiC;AACtE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD","sources":["webpack://root/./packages/core/makeup-focusables/dist/cjs/index.js","webpack://root/webpack/bootstrap","webpack://root/./docs/core/makeup-focusables/index.compiled.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nconst focusableElList = [\"a[href]\", \"area[href]\", \"button:not([disabled])\", \"embed\", \"iframe\", \"input:not([disabled])\", \"object\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"*[tabindex]\", \"*[contenteditable]\"];\nconst focusableElSelector = focusableElList.join();\nfunction _default(el) {\n  let keyboardOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  if (callback) {\n    const request = requestAnimationFrame(() => {\n      callback(getFocusables(el, keyboardOnly));\n    });\n    return () => {\n      cancelAnimationFrame(request);\n    };\n  }\n  return getFocusables(el, keyboardOnly);\n}\nfunction getFocusables(el) {\n  let keyboardOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let focusableEls = Array.prototype.slice.call(el.querySelectorAll(focusableElSelector));\n\n  // filter out elements with display: none or nested in a display: none parent\n  focusableEls = focusableEls.filter(function (focusableEl) {\n    while (focusableEl !== el) {\n      if (window.getComputedStyle(focusableEl).display === \"none\") {\n        return false;\n      }\n      focusableEl = focusableEl.parentElement;\n    }\n    return true;\n  });\n  if (keyboardOnly === true) {\n    focusableEls = focusableEls.filter(function (focusableEl) {\n      return focusableEl.getAttribute(\"tabindex\") !== \"-1\";\n    });\n  }\n  return focusableEls;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n\nvar _makeupFocusables = _interopRequireDefault(require(\"makeup-focusables\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// REQUIRE\n//const focusables = require('makeup-focusables').default;\n\n// IMPORT\n\nconst listEl = document.getElementById(\"list\");\nconst appender1 = document.getElementById(\"appender1\");\nconst appender2 = document.getElementById(\"appender2\");\nconst appender3 = document.getElementById(\"appender3\");\nconst appender4 = document.getElementById(\"appender4\");\nconst output = document.getElementById(\"output\");\nfunction onButtonClick(e) {\n  e.preventDefault();\n  const listItem = document.createElement(\"li\");\n  listItem.innerText = \"Item \".concat(listEl.childNodes.length);\n  if (e.target.id === \"appender1\") {\n    listItem.setAttribute(\"tabindex\", \"0\");\n  } else if (e.target.id === \"appender2\") {\n    listItem.setAttribute(\"tabindex\", \"-1\");\n  } else if (e.target.id === \"appender3\") {\n    listItem.setAttribute(\"tabindex\", \"0\");\n    listItem.setAttribute(\"hidden\", \"hidden\");\n  } else {\n    const listItemChild = document.createElement(\"button\");\n    listItem.setAttribute(\"hidden\", \"hidden\");\n    listItem.appendChild(listItemChild);\n  }\n  listEl.appendChild(listItem);\n  const focusableEls = (0, _makeupFocusables.default)(listEl);\n  output.innerText = focusableEls.length;\n}\nappender1.addEventListener(\"click\", onButtonClick);\nappender2.addEventListener(\"click\", onButtonClick);\nappender3.addEventListener(\"click\", onButtonClick);\nappender4.addEventListener(\"click\", onButtonClick);"],"names":[],"sourceRoot":""}