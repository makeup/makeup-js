{"version":3,"file":"makeup-floating-label/index.min.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;;;;;;;UCpJF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;ACNa;;AAEb,kDAAkD,mBAAO,CAAC,IAAsC;;AAEhG,uCAAuC,uCAAuC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC,E","sources":["webpack://root/./packages/makeup-floating-label/dist/mjs/index.js","webpack://root/webpack/bootstrap","webpack://root/webpack/runtime/define property getters","webpack://root/webpack/runtime/hasOwnProperty shorthand","webpack://root/webpack/runtime/make namespace object","webpack://root/./docs/makeup-floating-label/index.compiled.js"],"sourcesContent":["const defaultOptions = {\n  labelElementAnimateModifier: \"floating-label__label--animate\",\n  labelElementInlineModifier: \"floating-label__label--inline\",\n  labelElementFocusModifier: \"floating-label__label--focus\",\n  labelElementInvalidModifier: \"floating-label__label--invalid\",\n  labelElementDisabledModifier: \"floating-label__label--disabled\",\n  textboxElementBackgroundRGB: [\n    \"rgb(255, 255, 255)\",\n    \"rgb(247, 247, 247)\",\n    \"rgb(245, 245, 245)\",\n    \"rgb(230, 32, 72)\",\n    \"rgb(254, 245, 246)\"\n  ]\n};\nfunction getPlaceHolder(formControlEl) {\n  if (isSelect(formControlEl)) {\n    const firstOption = formControlEl.querySelector(\"option\");\n    return !firstOption.value ? firstOption.text : null;\n  } else if (formControlEl.hasAttribute(\"placeholder\")) {\n    return formControlEl.getAttribute(\"placeholder\");\n  }\n}\nfunction setPlaceholder(formControlEl, value) {\n  if (isSelect(formControlEl)) {\n    formControlEl.style[\"min-width\"] = \"\";\n    const beforeWidth = formControlEl.offsetWidth;\n    formControlEl.querySelector(\"option\").text = value;\n    if (!value && beforeWidth > formControlEl.offsetWidth) {\n      formControlEl.style[\"min-width\"] = `${beforeWidth}px`;\n    }\n  } else if (value) {\n    formControlEl.setAttribute(\"placeholder\", value);\n  } else {\n    formControlEl.removeAttribute(\"placeholder\");\n  }\n}\nfunction checkForPlaceholder(formControlEl) {\n  if (isSelect(formControlEl)) {\n    const firstOption = formControlEl.querySelector(\"option\");\n    if (!!firstOption.value) {\n      return;\n    }\n    return !!firstOption.text;\n  }\n  return formControlEl.hasAttribute(\"placeholder\");\n}\nfunction onMutation() {\n  const textboxFocus = isFocused(this.formControlEl);\n  this.placeholder = getPlaceHolder(this.formControlEl) || this.placeholder;\n  const placeholderCheck = checkForPlaceholder(this.formControlEl, this.placeholder);\n  if (!!this.placeholder && textboxFocus && !placeholderCheck) {\n    setPlaceholder(this.formControlEl, this.placeholder);\n  } else if (!textboxFocus && placeholderCheck) {\n    setPlaceholder(this.formControlEl, \"\");\n  }\n  if (isInvalid(this.formControlEl)) {\n    this.labelEl.classList.add(this.options.labelElementInvalidModifier);\n  } else {\n    this.labelEl.classList.remove(this.options.labelElementInvalidModifier);\n  }\n  if (isDisabled(this.formControlEl)) {\n    this.labelEl.classList.add(this.options.labelElementDisabledModifier);\n  } else {\n    this.labelEl.classList.remove(this.options.labelElementDisabledModifier);\n  }\n}\nfunction isFocused(formControlEl) {\n  return document.activeElement === formControlEl;\n}\nfunction isSelect(formControlEl) {\n  return formControlEl.tagName === \"SELECT\";\n}\nfunction hasValue(input) {\n  return input.value.length > 0;\n}\nfunction isDisabled(input) {\n  return input.hasAttribute(\"disabled\");\n}\nfunction isInvalid(input) {\n  return input.hasAttribute(\"aria-invalid\") && input.getAttribute(\"aria-invalid\") === \"true\";\n}\nfunction isAutofilled(input, color) {\n  if (!isSelect(input)) {\n    const bgColor = getComputedStyle(input).backgroundColor;\n    return Array.isArray(color) ? !color.includes(bgColor) : bgColor !== color;\n  }\n  return false;\n}\nfunction _onBlur() {\n  if (!hasValue(this.formControlEl)) {\n    this.labelEl.classList.add(this.options.labelElementInlineModifier);\n  }\n  this.labelEl.classList.remove(this.options.labelElementFocusModifier);\n  if (isInvalid(this.formControlEl)) {\n    this.labelEl.classList.add(this.options.labelElementInvalidModifier);\n  }\n  setPlaceholder(this.formControlEl, \"\");\n}\nfunction _onFocus() {\n  this.labelEl.classList.add(this.options.labelElementAnimateModifier);\n  this.labelEl.classList.add(this.options.labelElementFocusModifier);\n  this.labelEl.classList.remove(this.options.labelElementInlineModifier);\n  this.labelEl.classList.remove(this.options.labelElementInvalidModifier);\n  if (this.placeholder) {\n    setPlaceholder(this.formControlEl, this.placeholder);\n  }\n}\nclass src_default {\n  constructor(el, userOptions) {\n    this.options = Object.assign({}, defaultOptions, userOptions);\n    this._observer = new MutationObserver(onMutation.bind(this));\n    this.rootEl = el;\n    this.labelEl = this.rootEl.querySelector(\"label\");\n    this.formControlEl = this.rootEl.querySelector(\"input,textarea,select\");\n    this._onBlurListener = _onBlur.bind(this);\n    this._onFocusListener = _onFocus.bind(this);\n    this.formControlEl.addEventListener(\"blur\", this._onBlurListener);\n    this.formControlEl.addEventListener(\"focus\", this._onFocusListener);\n    if (!hasValue(this.formControlEl) && !isAutofilled(this.formControlEl, this.options.textboxElementBackgroundRGB)) {\n      this.labelEl.classList.add(this.options.labelElementInlineModifier);\n    }\n    if (isFocused(this.formControlEl)) {\n      this.labelEl.classList.add(this.options.labelElementFocusModifier);\n    }\n    onMutation.call(this);\n    this._observer.observe(this.formControlEl, {\n      childList: isSelect(this.formControlEl),\n      subtree: isSelect(this.formControlEl),\n      attributeFilter: [\"disabled\", \"aria-invalid\", \"placeholder\", \"value\"],\n      attributes: true\n    });\n  }\n  destroy() {\n    this._observer.disconnect();\n  }\n  refresh() {\n    if (hasValue(this.formControlEl) || isSelect(this.formControlEl) || isAutofilled(this.formControlEl, this.options.textboxElementBackgroundRGB)) {\n      this.labelEl.classList.remove(this.options.labelElementInlineModifier);\n    } else {\n      this.labelEl.classList.add(this.options.labelElementInlineModifier);\n    }\n    if (isFocused(this.formControlEl)) {\n      this.labelEl.classList.add(this.options.labelElementFocusModifier);\n    }\n  }\n}\nexport {\n  src_default as default\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\n\nvar _makeupFloatingLabel = _interopRequireDefault(require(\"../../packages/makeup-floating-label\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// REQUIRE\n// const FloatingLabel = require('../../packages/makeup-floating-label').default;\n// IMPORT\ndocument.addEventListener('DOMContentLoaded', function () {\n  var widgetEls = document.querySelectorAll('.floating-label');\n  var autofillBtn = document.getElementById('autofill');\n  var refreshBtn = document.getElementById('refresh');\n  var invalidateBtn = document.getElementById('invalidate');\n  var validateBtn = document.getElementById('validate');\n  var disableBtn = document.getElementById('disable');\n  var enableBtn = document.getElementById('enable');\n  var widgets = [];\n  widgetEls.forEach(function (el) {\n    widgets.push(new _makeupFloatingLabel.default(el));\n  });\n  autofillBtn.addEventListener('click', function () {\n    widgetEls.forEach(function (el) {\n      var input = el.querySelector('input');\n\n      if (input) {\n        input.value = 'Autofill Text';\n      } else {\n        el.querySelector('select').value = 'UK';\n      }\n    });\n  });\n  refreshBtn.addEventListener('click', function () {\n    widgets.forEach(function (el, index) {\n      widgets[index].refresh();\n    });\n  });\n  invalidateBtn.addEventListener('click', function () {\n    widgets.forEach(function (el, index) {\n      widgets[index].formControlEl.setAttribute('aria-invalid', 'true');\n    });\n  });\n  validateBtn.addEventListener('click', function () {\n    widgets.forEach(function (el, index) {\n      widgets[index].formControlEl.setAttribute('aria-invalid', 'false');\n    });\n  });\n  disableBtn.addEventListener('click', function () {\n    widgets.forEach(function (el, index) {\n      widgets[index].formControlEl.disabled = true;\n    });\n  });\n  enableBtn.addEventListener('click', function () {\n    widgets.forEach(function (el, index) {\n      widgets[index].formControlEl.disabled = false;\n    });\n  });\n});"],"names":[],"sourceRoot":""}