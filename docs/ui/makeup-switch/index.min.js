/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 5015:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(1381);


/***/ }),

/***/ 3352:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(8995);


/***/ }),

/***/ 4658:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(8481);
__webpack_require__(3540);


/***/ }),

/***/ 8481:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(9357);


/***/ }),

/***/ 3540:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(2002);


/***/ }),

/***/ 5957:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 1381:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 8995:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 9357:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 2002:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 7001:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
const defaultOptions = {
  bem: {
    control: "switch__control"
  },
  customElementMode: false
};
class _default {
  constructor(el, selectedOptions) {
    this._options = Object.assign({}, defaultOptions, selectedOptions);
    this.el = el;
    this._onClickListener = _onClick.bind(this);
    this._onKeyDownListener = _onKeyDown.bind(this);
    this._onMutationListener = _onMutation.bind(this);
    if (this.disabled) {
      this._focusableElement.setAttribute("tabindex", "-1");
    }
    this.el.classList.add("switch--js");
    if (!this._options.customElementMode) {
      this._mutationObserver = new MutationObserver(this._onMutationListener);
      this._observeMutations();
      this._observeEvents();
    }
  }
  _observeMutations() {
    if (!this._options.customElementMode) {
      this._mutationObserver.observe(this._focusableElement, {
        attributes: true,
        childList: false,
        subtree: false
      });
    }
  }
  _unobserveMutations() {
    if (!this._options.customElementMode) {
      this._mutationObserver.disconnect();
    }
  }
  _observeEvents() {
    this._focusableElement.addEventListener("click", this._onClickListener);
    this._focusableElement.addEventListener("keydown", this._onKeyDownListener);
  }
  _unobserveEvents() {
    this._focusableElement.removeEventListener("click", this._onClickListener);
    this._focusableElement.removeEventListener("keydown", this._onKeyDownListener);
  }
  get _focusableElement() {
    return this.el.querySelector(`.${this._options.bem.control}`);
  }
  set checked(isChecked) {
    this._unobserveMutations();
    this._focusableElement.setAttribute("aria-checked", isChecked.toString());
    this.el.dispatchEvent(new CustomEvent("makeup-switch-toggle", {
      composed: true,
      detail: {
        on: this.checked
      }
    }));
    this._observeMutations();
  }
  get checked() {
    return this._focusableElement.getAttribute("aria-checked") === "true";
  }
  set disabled(isDisabled) {
    this._unobserveMutations();
    this._focusableElement.setAttribute("aria-disabled", isDisabled.toString());
    this._focusableElement.setAttribute("tabindex", isDisabled ? "-1" : "0");
    this._observeMutations();
  }
  get disabled() {
    return this._focusableElement.getAttribute("aria-disabled") === "true";
  }
  set labelledby(theId) {
    this._unobserveMutations();
    this._focusableElement.setAttribute("aria-labelledby", theId);

    // customElementMode a11y workaround
    // aria-labelledby cannot resolve element id references that live outside of the Shadow DOM
    // as a workaround we can use aria-label
    if (this._options.customElementMode) {
      const labellingEl = document.getElementById(this.labelledby);
      if (labellingEl && labellingEl.innerText !== "") {
        this.label = labellingEl.innerText;
      }
    }
    this._observeMutations();
  }
  get labelledby() {
    return this._focusableElement.getAttribute("aria-labelledby");
  }
  get label() {
    return this._focusableElement.getAttribute("aria-label");
  }
  set label(theLabel) {
    this._unobserveMutations();
    this._focusableElement.setAttribute("aria-label", theLabel);
    this._observeMutations();
  }
  toggle() {
    this.checked = !this.checked;
  }
  destroy() {
    this._unobserveMutations();
    this._unobserveEvents();
    this._onClickListener = null;
    this._onKeyDownListener = null;
    this._onMutationListener = null;
  }
}
exports["default"] = _default;
function _onKeyDown(e) {
  if (!this.disabled) {
    switch (e.keyCode) {
      case 32:
        e.preventDefault();
        this.toggle();
        break;
      case 37:
        this.checked = false;
        break;
      case 39:
        this.checked = true;
        break;
      default:
        break;
    }
  }
}
function _onClick() {
  if (!this.disabled) {
    this.toggle();
  }
}
function _onMutation(mutationsList) {
  for (const mutation of mutationsList) {
    if (mutation.type === "attributes") {
      this.el.dispatchEvent(new CustomEvent("makeup-switch-mutation", {
        detail: {
          attributeName: mutation.attributeName
        }
      }));
    }
  }
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";


__webpack_require__(5957);
__webpack_require__(4658);
__webpack_require__(5015);
__webpack_require__(3352);
var _makeupSwitch = _interopRequireDefault(__webpack_require__(7001));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// REQUIRE
//const MakeupSwitch = require('makeup-switch').default;

// IMPORT

window.onload = function () {
  document.querySelectorAll(".switch").forEach(function (el, i) {
    const widget = new _makeupSwitch.default(el);
    el.addEventListener("makeup-switch-toggle", function (e) {
      console.log(e.type, e.detail);
    });
    el.addEventListener("makeup-switch-mutation", function (e) {
      console.log(e.type, e.detail);
    });
  });
};
})();

/******/ })()
;
//# sourceMappingURL=index.min.js.map